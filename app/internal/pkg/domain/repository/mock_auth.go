// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go

// Package repository is a generated GoMock package.
package repository

import (
	context "context"
	reflect "reflect"

	model "github.com/Khmer495/go-templete/internal/pkg/domain/model"
	gomock "github.com/golang/mock/gomock"
)

// MockIAuthRepository is a mock of IAuthRepository interface.
type MockIAuthRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthRepositoryMockRecorder
}

// MockIAuthRepositoryMockRecorder is the mock recorder for MockIAuthRepository.
type MockIAuthRepositoryMockRecorder struct {
	mock *MockIAuthRepository
}

// NewMockIAuthRepository creates a new mock instance.
func NewMockIAuthRepository(ctrl *gomock.Controller) *MockIAuthRepository {
	mock := &MockIAuthRepository{ctrl: ctrl}
	mock.recorder = &MockIAuthRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthRepository) EXPECT() *MockIAuthRepositoryMockRecorder {
	return m.recorder
}

// FindUserIdByFirebaseUserId mocks base method.
func (m *MockIAuthRepository) FindUserIdByFirebaseUserId(ctx context.Context) (model.Id, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindUserIdByFirebaseUserId", ctx)
	ret0, _ := ret[0].(model.Id)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindUserIdByFirebaseUserId indicates an expected call of FindUserIdByFirebaseUserId.
func (mr *MockIAuthRepositoryMockRecorder) FindUserIdByFirebaseUserId(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindUserIdByFirebaseUserId", reflect.TypeOf((*MockIAuthRepository)(nil).FindUserIdByFirebaseUserId), ctx)
}

// FindUserPkByFirebaseUserId mocks base method.
func (m *MockIAuthRepository) FindUserPkByFirebaseUserId(ctx context.Context) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindUserPkByFirebaseUserId", ctx)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindUserPkByFirebaseUserId indicates an expected call of FindUserPkByFirebaseUserId.
func (mr *MockIAuthRepositoryMockRecorder) FindUserPkByFirebaseUserId(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindUserPkByFirebaseUserId", reflect.TypeOf((*MockIAuthRepository)(nil).FindUserPkByFirebaseUserId), ctx)
}
